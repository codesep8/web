// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Config {
  id Int @id @default(autoincrement())
  sitename String
  notice String
  footer String
	description String
}

model User {
  id String @id @default(uuid())
  username String @unique
  email String @unique
  password String
  description String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
  comments Comment[]
  board Board[]
}

model Post {
  id BigInt @id @default(autoincrement())
  title String
  content String @db.Text
  userId String
  username String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

	user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments Comment[]
}

model Board {
  id String @id @default(uuid())
  name String
  description String @db.Text
  ownerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Comment {
  id BigInt @id @default(autoincrement())
  postId BigInt
  userId String
  username String
  content String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}